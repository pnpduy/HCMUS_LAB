# -*- coding: utf-8 -*-
"""19110290_THPTTT_Tuan2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1GJBUJIj_y7arinCo48_QZcOvgj9azLoC

# Họ & Tên: Phạm Nguyễn Phương Duy
# MSSV: 19110290
"""

#Khởi tạo mảng N 
import math
import random

#Khai Báo
array_N = [] 

for i in range(1, 1001):
  if i % 10 == 0:
    array_N.append(i)
  
print("Mảng N:",array_N)
print(f"Mảng N có {len(array_N)} phần tử ")

def check_sum(A, x):
    # Sắp xếp mảng A
    A.sort()
    # Khởi tạo hai con trỏ
    i = 0
    j = len(A) - 1
    # Khởi tạo kết quả
    result = []
    #Khởi tạo phép gán và so sánh
    G  = 3
    SS = 0
    # Duyệt qua mảng A
    while i < j:
        SS = SS + 1
        # Nếu tổng của A[i] và A[j] bằng x, thì thêm cặp (i, j) vào kết quả
        if A[i] + A[j] == x:
            result.append((A[i], A[j]))
            i = i + 1
            j = i - 1

            SS = SS + 1
            G = G + 3
        # Nếu tổng của A[i] và A[j] nhỏ hơn x, thì tăng i
        elif A[i] + A[j] < x:
            i = i - 1

            SS = SS + 1
            G = G + 1
        # Nếu tổng của A[i] và A[j] lớn hơn x, thì giảm j
        else:
            j = j - 1
            G = G + 1

    # Trả về kết quả
    return result, G, SS

import random
import math
import matplotlib.pyplot as plt

# Khởi tạo kết quả
array_G  = []
array_SS = []
array_Nlog2N = []
array_cN = []
# Khởi tạo x 
x = 50

#In ra kết quả 
for i in range(10):

    #Khởi tạo giá tri
    N = random.choice(array_N)
    A = random.sample(range(1,10001),N)
    result, G, SS  = check_sum(A, x)
    Nlog2N =  N*math.log2(N) 
    #In kết quả
    print(f"TH {i+1}")
    print(f"Mảng A : {A}")
    print(f"Giá trị N :{N}")
    print(f"Giá trị Nlog2N: {Nlog2N}")
    print(f"Số phép gán: {G} ")
    print(f"Số phép so sánh: {SS}")
    print(f"Có {len(result)} cặp có tổng bằng {x}")
    print(f"Các cặp có tổng bằng {x} là  {result}\n")
    #Thêm giá trị vào mảng để vẽ hình 
    array_G.append(G)
    array_SS.append(SS)
    array_Nlog2N.append(Nlog2N)
    array_cN.append(N)

# Sắp xếp mảng giá trị
array_G.sort()
array_SS.sort()
array_Nlog2N.sort()
array_cN.sort()

import matplotlib.pyplot as plt
import numpy as np
import random

#Vẽ đồ thị so sánh giữa NLog2(N), Gan(N) và So sánh(N)'
fig = plt.figure(figsize=(14, 8))

value_N = array_cN
value_Gan = array_G
value_SoSanh = array_SS
value_Nlog2N = array_Nlog2N

#Tách các giá trị đồ thị khi bị trùng lặp trong biểu đồ 
offset = 50
Gan_offset = value_Gan + np.random.randn(len(value_Gan)) * offset

print(f"Gán: {array_G}")
print(f"So Sanh :{array_SS}")
print(f"N log2N :{array_Nlog2N}")
print(f"N {array_cN}")

plt.plot(value_N, Gan_offset, 'ro-', label='Gán')
plt.plot(value_N, value_SoSanh, 'bo-', label='So sánh')
plt.plot(value_N, value_Nlog2N, 'go-', label='N log2N')
plt.title('Đồ thị so sánh giữa NLog2(N), Gan(N) và SoSanh(N)')
plt.xlabel('Giá tri X')
plt.ylabel('Giá trị')
plt.legend()
plt.show()